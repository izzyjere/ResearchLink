@page "/submit"
<div class="container mt-5">
    <h3>Submit Paper</h3>
    <div class="row">
        <EditForm Model="@Model">
            <DataAnnotationsValidator />
            <div class="card col-md-6">
                <div class="row card-body">                    
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label for="title">Research Title</label>
                            <InputText type="text" class="form-control" id="title" @bind-Value="@Model.Title"/>
                            <ValidationMessage For="()=>Model.Title"/>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label for="type">Research Type</label>
                            <InputSelect type="text" class="form-control" id="type" @bind-Value="@Model.Type">
                              @foreach (var item in Enum.GetValues(typeof(ResearchType)))
                              {
                                  <option value="@item">@item.ToString()</option>
                              }
                            </InputSelect>
                            <ValidationMessage For="()=>Model.Type"/>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
       
    </div>
</div>


@code {
    Article Model = new Article();
    Author? currentAuthor;
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }
    ClaimsPrincipal? claimsPrincipal { get; set; }
    IEnumerable<Journal> journals = new List<Journal>();
    protected override async Task OnInitializedAsync()
    {
        claimsPrincipal = (await AuthenticationStateTask).User;
        if (claimsPrincipal !=null && claimsPrincipal.Identity.IsAuthenticated)
        {
            var currentAuthor = await authorService.Table.FirstOrDefaultAsync(a => a.UserId == claimsPrincipal.GetUserId());
            if (currentAuthor is null)
            {
                Navigation.NavigateTo("/profile", true);
            }
        }
        else
        {
            Navigation.NavigateTo("login?next=submit", true);
        }

    }
}
